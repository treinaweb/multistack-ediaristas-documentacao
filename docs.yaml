openapi: 3.0.1
info:
  title: E-Diaristas
  description: API back-end da aplicação E-Diaristas desenvolvida durante a imersão Multi-stack da TreinaWeb
  version: 1.0.0
  contact:
    name: TreinaWeb
    url: https://www.treinaweb.com.br/contato
    email: contato@treinaweb.com.br
servers:
  - url: http://localhost:8080
    description: Aplicação Spring Local
  - url: https://ediaristas-api-php.herokuapp.com
    description: Aplicação Laravel Heroku
tags:
  - name: Me
  - name: Api
  - name: Auth
  - name: Diárias
  - name: Serviços
  - name: Usuários
  - name: Diaristas
  - name: Endereços
  - name: Oportunidades
paths:
  /api:
    get:
      operationId: getLinks
      tags:
        - Api
      description: Exibe os links iniciais da API
      responses:
        "200":
          description: Exibição foi realizada com sucesso
          content:
            "application/json":
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      $ref: "#/components/schemas/LinkResponse"
  /api/diaristas/localidades:
    get:
      operationId: getDiaristasLocalidades
      tags:
        - Diaristas
      description: Buscar diáristas que atendem uma determinada localidade
      parameters:
        - name: cep
          in: query
          required: true
          schema:
            type: string
          example: "04614903"
      responses:
        "200":
          description: Busca foi realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DiaristaLocalidadePagedResponse"
        "400":
          description: CEP não foi informado ou é inválido
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: CEP informado não foi encontrado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/diaristas/disponibilidade:
    get:
      operationId: getDisponibilidade
      tags:
        - Diaristas
      description: Verificar a disponibilidade de diáristas por localidade
      parameters:
        - name: cep
          in: query
          required: true
          schema:
            type: string
          example: "04614903"
      responses:
        "200":
          description: Verificação foi realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DisponibilidadeResponse"
        "400":
          description: CEP não foi informado ou é inválido
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: CEP informado não foi encontrado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/enderecos:
    get:
      operationId: getEndereco
      tags:
        - Endereços
      description: Buscar dados de um endereço por CEP
      parameters:
        - name: cep
          in: query
          required: true
          schema:
            type: string
          example: "04614903"
      responses:
        "200":
          description: Busca foi realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/EnderecoResponse"
        "400":
          description: CEP não foi informado ou é inválido
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: CEP informado não foi encontrado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/servicos:
    get:
      operationId: getServicos
      tags:
        - Serviços
      description: Lista os serviços cadastrados
      responses:
        "200":
          description: Serviços listados com sucesso
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServicoResponse"
  /api/usuarios:
    post:
      operationId: postUsuario
      tags:
        - Usuários
      description: Cadastrar um novo usuário
      requestBody:
        content:
          "multipart/form-data":
            schema:
              $ref: "#/components/schemas/CreateUsuarioRequest"
      responses:
        "201":
          description: Usuário cadastrado com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CreatedUsuarioResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuarios/endereco:
    get:
      operationId: getUsuarioEndereco
      tags:
        - Usuários
      description: Exibe o endereço do usuário logado
      responses:
        "200":
          description: Endereço do usuário logado exibido com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UsuarioEnderecoResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: O endereço do usuário logado não foi encontrado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
    put:
      operationId: putUsuarioEndereco
      tags:
        - Usuários
      description: Altera o endereço do usuário logado
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UsuarioEnderecoRequest"
      responses:
        "200":
          description: Alteração do endereço realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UsuarioEnderecoResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/usuarios/cidades-atendidas:
    get:
      operationId: getUsuaruiCidadesAtendidas
      tags:
        - Usuários
      description: Lista as cidades atendidas pelo usuário logado
      responses:
        "200":
          description: Listagem realizada com sucesso
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsuarioCidadeAtendidaResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
    put:
      operationId: putUsuarioCidadesAtendidas
      tags:
        - Usuários
      description: Atualiza as cidades atendidas pelo usuário logado
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UsuarioCidadesAtendidadasRequest"
      responses:
        "200":
          description: Cidades atendidas pelo usuário logado atualizadas com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /auth/token:
    post:
      operationId: token
      tags:
        - Auth
      description: Autenticar com as credenciais do usuário
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CredentialsRequest"
      responses:
        "200":
          description: Autenticação realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Credenciais incorretas
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/refresh:
    post:
      operationId: refresh
      tags:
        - Auth
      description: Autenticar com o refresh token
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "200":
          description: Autenticação realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Refresh token inválido
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/logout:
    post:
      operationId: logout
      tags:
        - Auth
      description: Realizar logout ao inválidar o refresh token
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "205":
          description: Logout realizado com sucesso
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/me:
    get:
      operationId: getMe
      tags:
        - Me
      description: Obter os dados do usuário logado
      responses:
        "200":
          description: Usuário logado obtido com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MeResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias:
    get:
      operationId: getDiarias
      tags:
        - Diárias
      description: Listas as diárias do usuário logado
      responses:
        "200":
          description: Listagem realizada com sucesso
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiariaResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
    post:
      operationId: postDiaria
      tags:
        - Diárias
      description: Cadastrar nova Diária
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/DiariaRequest"
      responses:
        "201":
          description: Diária cadastrada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DiariaResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}:
    get:
      operationId: getDiaria
      tags:
        - Diárias
      description: Busca uma diária por id
      parameters:
        - name: diariaId
          in: path
          description: ID da diária a buscada
          required: true
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: Diária encontrada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DiariaResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}/pagar:
    post:
      operationId: pagarDiaria
      tags:
        - Diárias
      description: Realizar o pagamento de uma diária
      parameters:
        - name: diariaId
          in: path
          description: ID da diária a ser paga
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PagamentoRequest"
      responses:
        "200":
          description: Pagamento realizado com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}/candidatar:
    post:
      operationId: candidatarDiaria
      tags:
        - Diárias
      description: Realizar candidatura do usuário logado para uma diária
      parameters:
        - name: diariaId
          in: path
          description: ID da diária para se candidatar
          required: true
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: Candidatura realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}/confirmar-presenca:
    patch:
      operationId: confirmarPresenca
      tags:
        - Diárias
      description: Confirmar a presença do diárista para a diária
      parameters:
        - name: diariaId
          in: path
          description: ID da diária para confirmar a presença
          required: true
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: Confirmação de presença do diárista realizada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}/avaliacao:
    patch:
      operationId: avaliarDiaria
      tags:
        - Diárias
      description: Cadastra uma avaliação para a diária
      parameters:
        - name: diariaId
          in: path
          description: ID da diária a ser avaliada
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/AvaliacaoRequest"
      responses:
        "200":
          description: Avaliação cadastrada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/diarias/{diariaId}/cancelar:
    patch:
      operationId: cancelarDiaria
      tags:
        - Diárias
      description: Realiza o cancelamento de uma diária
      parameters:
        - name: diariaId
          in: path
          description: ID da diária a ser cancelada
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CancelarDiariaRequest"
      responses:
        "200":
          description: Diária cancelada com sucesso
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Houveram erros de validação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diária não encontrada
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
  /api/oportunidades:
    get:
      operationId: getOportunidades
      tags:
        - Oportunidades
      description: Lista as opoturnidades disponiveis para o usuário logado
      responses:
        "200":
          description: Oportunidades listadas com sucesso
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OportunaidadeResponse"
        "401":
          description: Usuário não está autenticado
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Usuário logado não tem acesso para realizar essa operação
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - JWT: []
components:
  schemas:
    DiaristaLocalidadePagedResponse:
      type: object
      properties:
        diaristas:
          type: array
          items:
            $ref: "#/components/schemas/DiaristaLocalidadeResponse"
        quantidade_diaristas:
          type: integer
    DiaristaLocalidadeResponse:
      type: object
      properties:
        nome_completo:
          type: string
        reputacao:
          type: number
          format: double
        fot_usuario:
          type: string
          format: uri
        cidade:
          type: string
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        erros:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    EnderecoResponse:
      type: object
      properties:
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        localidade:
          type: string
        uf:
          type: string
        ibge:
          type: string
    DisponibilidadeResponse:
      type: object
      properties:
        disponibilidade:
          type: boolean
    LinkResponse:
      type: object
      properties:
        type:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
        rel:
          type: string
        uri:
          type: string
          format: uri
    ServicoResponse:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        valor_minimo:
          type: number
          format: double
        qtd_horas:
          type: integer
        porcentagem_comissao:
          type: number
          format: double
        horas_quarto:
          type: integer
        valor_quarto:
          type: number
          format: double
        horas_sala:
          type: integer
        valor_sala:
          type: number
          format: double
        horas_banheiro:
          type: integer
        valor_banheiro:
          type: number
          format: double
        horas_cozinha:
          type: integer
        valor_cozinha:
          type: number
          format: double
        horas_quintal:
          type: integer
        valor_quintal:
          type: number
          format: double
        horas_outros:
          type: integer
        valor_outros:
          type: number
          format: double
        icone:
          type: string
          enum:
            - twf-cleaning-1
            - twf-cleaning-2
            - twf-cleaning-3
        posicao:
          type: integer
    CreateUsuarioRequest:
      type: object
      required:
        - nome_completo
        - email
        - password
        - password_confirmation
        - tipo_usuario
        - cpf
        - nascimento
        - telefone
        - foto_documento
      properties:
        nome_completo:
          type: string
          minLength: 3
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          format: password
        password_confirmation:
          type: string
          format: password
        tipo_usuario:
          type: integer
          enum:
            - 1
            - 2
        cpf:
          type: string
          minLength: 11
          maxLength: 11
        nascimento:
          type: string
          format: date
        telefone:
          type: string
          minLength: 11
          maxLength: 11
        foto_documento:
          type: string
          format: binary
        chave_pix:
          type: string
          minLength: 11
          maxLength: 255
    CreatedUsuarioResponse:
      type: object
      properties:
        id:
          type: integer
        nome_completo:
          type: string
        email:
          type: string
          format: email
        tipo_usuario:
          type: integer
          enum:
            - 1
            - 2
        cpf:
          type: string
        nascimento:
          type: string
          format: date
        telefone:
          type: string
        foto_usuario:
          type: string
          format: uri
        chave_pix:
          type: string
        token:
          $ref: "#/components/schemas/TokenResponse"
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkResponse"
    TokenResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
    CredentialsRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    RefreshRequest:
      type: object
      required:
        - refresh
      properties:
        refresh:
          type: string
    MeResponse:
      type: object
      properties:
        id:
          type: integer
        nome_completo:
          type: string
        email:
          type: string
          format: email
        tipo_usuario:
          type: integer
          enum:
            - 1
            - 2
        cpf:
          type: string
        nascimento:
          type: string
          format: date
        telefone:
          type: string
        foto_usuario:
          type: string
          format: uri
        chave_pix:
          type: string
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkResponse"
    DiariaRequest:
      type: object
      required:
        - data_atendimento
        - tempo_atendimento
        - preco
        - cep
        - logradouro
        - bairro
        - cidade
        - estado
        - codigo_ibge
        - quantidade_cozinhas
        - quantidade_banheiros
        - quantidade_quintais
        - quantidade_outros
        - servico
      properties:
        data_atendimento:
          type: string
          format: date-time
        tempo_atendimento:
          type: integer
        preco:
          type: number
          format: double
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        codigo_ibge:
          type: string
        quantidade_quatos:
          type: integer
        quantidade_salas:
          type: integer
        quantidade_cozinhas:
          type: integer
        quantidade_banheiros:
          type: integer
        quantidade_quintais:
          type: integer
        quantidade_outros:
          type: integer
        observacoes:
          type: string
        servico:
          type: integer
    DiariaResponse:
      type: object
      properties:
        id:
          type: integer
        staus:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        motivo_cancelamento:
          type: string
        nome_servico:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        data_atendimento:
          type: string
          format: date-time
        tempo_atendimento:
          type: integer
        preco:
          type: number
          format: double
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        codigo_ibge:
          type: string
        quantidade_quatos:
          type: integer
        quantidade_salas:
          type: integer
        quantidade_cozinhas:
          type: integer
        quantidade_banheiros:
          type: integer
        quantidade_quintais:
          type: integer
        quantidade_outros:
          type: integer
        observacoes:
          type: string
        servico:
          type: integer
        cliente:
          $ref: "#/components/schemas/UsuarioDiariaResponse"
        diarista:
          $ref: "#/components/schemas/UsuarioDiariaResponse"
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkResponse"
    UsuarioDiariaResponse:
      type: object
      properties:
        id:
          type: integer
        nome_completo:
          type: string
        nascimento:
          type: string
          format: date
        foto_usuario:
          type: string
          format: uri
        telefone:
          type: string
        tipo_usuario:
          type: integer
          enum:
            - 1
            - 2
        reputacao:
          type: number
          format: double
    PagamentoRequest:
      type: object
      required:
        - card_hash
      properties:
        card_hash:
          type: string
    MessageResponse:
      type: object
      properties:
        mensagem:
          type: string
    UsuarioEnderecoRequest:
      type: object
      required:
        - logradouro
        - numero
        - bairro
        - cep
        - cidade
        - estado
      properties:
        logradouro:
          type: string
          minLength: 3
          maxLength: 255
        numero:
          type: string
          minLength: 1
          maxLength: 255
        bairro:
          type: string
          minLength: 3
          maxLength: 255
        cep:
          type: string
          minLength: 8
          maxLength: 8
        cidade:
          type: string
          minLength: 3
          maxLength: 255
        estado:
          type: string
          minLength: 2
          maxLength: 2
        complemento:
          type: string
          maxLength: 255
    UsuarioEnderecoResponse:
      type: object
      properties:
        id:
          type: integer
        logradouro:
          type: string
        numero:
          type: string
        bairro:
          type: string
        cep:
          type: string
        cidade:
          type: string
        estado:
          type: string
        complemento:
          type: string
    UsuarioCidadesAtendidadasRequest:
      type: object
      required:
        - cidades
      properties:
        cidades:
          type: array
          items:
            $ref: "#/components/schemas/UsuarioCidadeAtendidaRequest"
    UsuarioCidadeAtendidaRequest:
      type: object
      required:
        - cidade
        - codigo_ibge
      properties:
        cidade:
          type: string
          minLength: 3
          maxLength: 255
        codigo_ibge:
          type: string
    UsuarioCidadeAtendidaResponse:
      type: object
      properties:
        id:
          type: integer
        cidade:
          type: string
        estado:
          type: string
        codigo_ibge:
          type: string
    OportunaidadeResponse:
      type: object
      properties:
        id:
          type: integer
        staus:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        motivo_cancelamento:
          type: string
        nome_servico:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        data_atendimento:
          type: string
          format: date-time
        tempo_atendimento:
          type: integer
        preco:
          type: number
          format: double
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        codigo_ibge:
          type: string
        quantidade_quatos:
          type: integer
        quantidade_salas:
          type: integer
        quantidade_cozinhas:
          type: integer
        quantidade_banheiros:
          type: integer
        quantidade_quintais:
          type: integer
        quantidade_outros:
          type: integer
        observacoes:
          type: string
        servico:
          type: integer
        cliente:
          $ref: "#/components/schemas/UsuarioDiariaResponse"
        avaliacoes_cliente:
          type: array
          items:
            $ref: "#/components/schemas/AvaliacaoResponse"
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkResponse"
    AvaliacaoResponse:
      type: object
      properties:
        descricao:
          type: string
        nota:
          type: number
          format: double
        nome_avaliador:
          type: string
        foto_avaliador:
          type: string
          format: uri
    AvaliacaoRequest:
      type: object
      required:
        - descricao
        - nota
      properties:
        descricao:
          type: string
          minLength: 3
          maxLength: 255
        nota:
          type: number
          format: double
          minimum: 0
          maximum: 5
    CancelarDiariaRequest:
      type: object
      required:
        - motivo_cancelamento
      properties:
        motivo_cancelamento:
          type: string
          minLength: 3
          maxLength: 255
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
